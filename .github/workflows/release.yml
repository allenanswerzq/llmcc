name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
      - run: cargo test --release

  publish-crates:
    name: Publish to crates.io
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CRATES: llmcc-core llmcc-rust llmcc-python llmcc-bindings llmcc
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: swatinem/rust-cache@v2
      - name: Publish crates
        env:
          TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          for crate in $CRATES; do
            echo "Publishing $crate..."
            cargo publish -p "$crate" --token "$TOKEN"
            sleep 10
          done

  build-wheels:
    name: Build wheels
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: crates/llmcc-bindings
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: crates/llmcc-bindings/dist/*.whl

  build-sdist:
    name: Build sdist
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - uses: dtolnay/rust-toolchain@stable
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: crates/llmcc-bindings
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: crates/llmcc-bindings/dist/*.tar.gz

  publish-python:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Flatten dist
        run: |
          find dist -type f \( -name "*.whl" -o -name "*.tar.gz" \) -exec mv {} dist/ \;
          find dist -type d -empty -delete
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist

  release:
    name: Create GitHub release
    needs: [publish-crates, publish-python]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version
        id: version
        run: echo "tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Flatten dist
        run: |
          find dist -type f \( -name "*.whl" -o -name "*.tar.gz" \) -exec mv {} dist/ \;
          find dist -type d -empty -delete
      - uses: softprops/action-gh-release@v1
        with:
          body: |
            Released llmcc ${{ steps.version.outputs.tag }}

            Published to:
            - crates.io (llmcc-core, llmcc-rust, llmcc-python, llmcc-bindings, llmcc)
            - PyPI (wheels for Python 3.8-3.12)
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
